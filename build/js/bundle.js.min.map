{"version":3,"sources":["alert.js","app.js","dashboard.js","dragNdrop.js","getData.js","monthInput.js","resetFileInput.js","selectAnimation.js"],"names":["showErrorAlert","errorInfo","alertContainer","document","createElement","classList","add","alert","x","alertTitle","textContent","alertInfo","button","addEventListener","remove","setTimeout","body","appendChild","e","target","this","startApp","resetFileInput","dashboard","dragNdrop","currentSection","querySelectorAll","forEach","changeSection","newSection","currentTarget","parentNode","previousElementSibling","querySelector","clearSidebarClasses","nextElementSibling","sidebarPreviousElement","sidebarNextElement","child","dropArea","isOver","preventDefault","highlight","unhighlight","handleDrop","files","dataTransfer","boolean","validateFile","click","length","type","async","getData","createLoading","fetchData","deleteLoading","loadingContainer","loading","animation","i","div","form","FormData","url","result","fetch","method","data","json","rfc","console","log","monthInput","selectInput","contains","month","getAttribute","updateMonth","checked","inputContainer","inputSubmit","fileInput","name","accept","id","selectAnimation","inputId"],"mappings":"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","file":"bundle.js","sourcesContent":["function showErrorAlert(errorInfo) {\r\n    const alertContainer = document.createElement('DIV');\r\n    alertContainer.classList.add('alert-container', 'in');\r\n\r\n    const alert = document.createElement('DIV');\r\n    alert.classList.add('alert', 'in', 'no-select');\r\n\r\n    const x = document.createElement('SPAN');\r\n    // x.textContent = 'X';\r\n\r\n    const alertTitle = document.createElement('P');\r\n    alertTitle.classList.add('alert-title');\r\n    alertTitle.textContent = 'El archivo no se puede subir';\r\n\r\n    const alertInfo = document.createElement('P');\r\n    alertInfo.classList.add('alert-info');\r\n    alertInfo.textContent = errorInfo;\r\n\r\n    const button = document.createElement('BUTTON');\r\n    button.classList.add('button');\r\n    button.textContent = 'Ok';\r\n    button.addEventListener('click', () => {\r\n        alert.classList.remove('in');\r\n        alert.classList.add('out');\r\n\r\n        alertContainer.classList.remove('in');\r\n        alertContainer.classList.add('out');\r\n\r\n        setTimeout(() => {\r\n            alertContainer.remove();\r\n            document.body.classList.remove('alert');\r\n        }, 950);\r\n    })\r\n\r\n    alert.appendChild(x);\r\n    alert.appendChild(alertTitle);\r\n    alert.appendChild(alertInfo);\r\n    alert.appendChild(button);\r\n\r\n    alertContainer.appendChild(alert);\r\n    alertContainer.addEventListener('click', function(e) {\r\n        if(e.target === this) {\r\n\r\n            alert.classList.remove('in');\r\n            alert.classList.add('out');\r\n    \r\n            this.classList.remove('in');\r\n            this.classList.add('out');\r\n    \r\n            setTimeout(() => {\r\n                this.remove();\r\n                document.body.classList.remove('alert');\r\n            }, 950);\r\n        }\r\n    })\r\n\r\n    document.body.classList.add('alert');\r\n    document.body.appendChild(alertContainer);\r\n}","document.addEventListener('DOMContentLoaded', () => {\r\n    startApp();\r\n})\r\n\r\nfunction startApp() {\r\n    // selectAnimation();\r\n    resetFileInput();\r\n    dashboard();\r\n    dragNdrop();\r\n    // monthInput();\r\n}","let currentSection = 1;\r\n\r\nfunction dashboard() {\r\n    const sidebarButtons = document.querySelectorAll('.sidebar button');\r\n    sidebarButtons.forEach(button => {\r\n        button.addEventListener('click', changeSection)\r\n    })    \r\n}\r\n\r\nfunction changeSection(e) {\r\n    let newSection = e.currentTarget;\r\n    if(newSection == currentSection) {\r\n        return;\r\n    }\r\n    if(newSection.parentNode.previousElementSibling === null) {\r\n        const uploadFileSection = document.querySelector('.sidebar-item-container button[data-section=\"1\"]');\r\n        newSection = uploadFileSection; \r\n    }\r\n    clearSidebarClasses();\r\n    newSection.parentNode.classList.add('selected');\r\n    newSection.parentNode.previousElementSibling.classList.add('right-bottom-border');\r\n    newSection.parentNode.nextElementSibling.classList.add('right-top-border');\r\n\r\n    let sidebarPreviousElement = newSection.parentNode.previousElementSibling.previousElementSibling;\r\n\r\n    while(sidebarPreviousElement !== null) {\r\n        sidebarPreviousElement.classList.add('right-border');\r\n        sidebarPreviousElement = sidebarPreviousElement.previousElementSibling;\r\n    }\r\n\r\n    let sidebarNextElement = newSection.parentNode.nextElementSibling.nextElementSibling;\r\n\r\n    while(sidebarNextElement !== null) {\r\n        sidebarNextElement.classList.add('right-border');\r\n        sidebarNextElement = sidebarNextElement.nextElementSibling;\r\n    }\r\n}\r\n\r\nfunction clearSidebarClasses() {\r\n    const sidebarChildren = document.querySelectorAll('.sidebar > *');\r\n    sidebarChildren.forEach(child => {\r\n        child.classList.remove('right-border');\r\n        child.classList.remove('right-top-border');\r\n        child.classList.remove('right-bottom-border');\r\n        child.classList.remove('selected');\r\n    })\r\n}","function dragNdrop() {\r\n    const dropArea = document.querySelector('.upload-section');\r\n    let isOver = false;\r\n    \r\n    dropArea.addEventListener('dragover', function(e) {\r\n        // Stopping default prevents opening a new browser tab for showing the file that has been dropped\r\n        e.preventDefault();\r\n        isOver = true;\r\n        highlight(this);\r\n    });\r\n\r\n    dropArea.addEventListener('dragleave', function(e) {\r\n        isOver = false;\r\n        /* Waits 10ms for checking whether the mouse is over the dropArea or not\r\n        Because if you move into a child of the 'upload-container' DIV it will\r\n        count as if you have left the dropArea and eventually it will \r\n        produce a 'dragleave' event even though you are still moving inside the\r\n        dropArea. So that's why it waits 10ms because if the mouse is still moving\r\n        inside the dropArea, it will create a 'dragover' 7ms or less after the dragleave\r\n        event was fired. And that's how we know whether the mouse has left the dropArea \r\n        or not */\r\n        setTimeout(() => {\r\n            if(!isOver) {\r\n                unhighlight(this);\r\n            }\r\n        }, 10);\r\n    });\r\n\r\n    dropArea.addEventListener('drop', function(e) {\r\n        /* Stopping default prevents opening a new browser tab for showing the file that has been dropped\r\n        Both are necessary, for 'drop' and 'dragover' events */\r\n        e.preventDefault();\r\n        unhighlight(this);\r\n        handleDrop(e);\r\n    });\r\n\r\n    document.body.addEventListener('dragover', function(e) {\r\n        e.preventDefault();\r\n    })\r\n\r\n    document.body.addEventListener('drop', function(e) {\r\n        e.preventDefault();\r\n    })\r\n}\r\n\r\nfunction handleDrop(e) {\r\n    // Takes the file that has been dropped\r\n    const dt = e.dataTransfer;\r\n    const files = dt.files;\r\n\r\n    const {boolean, errorInfo} = validateFile(files);\r\n\r\n    if(boolean) {\r\n        // Decode the QR code and retrieve the Date from the PDF Tax Receipt\r\n        const inputFile = document.querySelector('input[type=file]');\r\n        inputFile.files = files;\r\n    \r\n        const inputSubmit = document.querySelector('input[type=submit]');\r\n        inputSubmit.click();\r\n    }else {\r\n        // Alert the user the file is not in PDF format\r\n        showErrorAlert(errorInfo);\r\n    }\r\n}\r\n\r\nfunction highlight(dropArea) {\r\n    dropArea.classList.add('highlight');\r\n}\r\n\r\nfunction unhighlight(dropArea) {\r\n    dropArea.classList.remove('highlight');\r\n}\r\n\r\nfunction validateFile(files) {\r\n    if(files.length > 1) return {boolean: false, errorInfo: \"Subir 1 archivo a la vez\"};\r\n    if(files[0].type === 'application/pdf')  {\r\n        return {boolean: true};       \r\n    } else {\r\n        return {boolean: false, errorInfo: \"El formato debe ser PDF\"};\r\n    }\r\n}","async function getData() {\r\n    createLoading();\r\n    await fetchData();\r\n    deleteLoading();\r\n}\r\n\r\nfunction deleteLoading() {\r\n    const loadingContainer = document.querySelector('.loading-container');\r\n    loadingContainer.remove();\r\n}\r\n\r\nfunction createLoading() {\r\n    const loadingContainer = document.createElement('DIV');\r\n    loadingContainer.classList.add('loading-container');\r\n\r\n    const loading = document.createElement('DIV');\r\n    loading.classList.add('loading');\r\n\r\n    const animation = document.createElement('DIV');\r\n    animation.classList.add('lds-ring');\r\n\r\n    for(let i = 0; i < 4; i++) {\r\n        const div = document.createElement('DIV');\r\n        animation.appendChild(div);\r\n    }\r\n\r\n    loading.appendChild(animation);\r\n    loadingContainer.appendChild(loading);\r\n\r\n    document.body.appendChild(loadingContainer);\r\n}\r\n\r\nasync function fetchData() {\r\n    const form = new FormData(document.querySelector(\".form\"));\r\n    try {\r\n        const url = 'http://localhost/SocialService/QR-project/includes/monthsPerson.php';\r\n        const result = await fetch(url, {\r\n            method: \"post\",\r\n            body: form\r\n        });\r\n\r\n        const data = await result.json();\r\n        const {rfc} = data;\r\n        // console.log(rfc);\r\n        console.log(data);\r\n        // return rfc;\r\n    }catch(e) {\r\n        console.log(e);\r\n    }\r\n}","function monthInput() {\r\n    const selectInput = document.querySelector('.select-input');\r\n    selectInput.addEventListener('click', function(e) {\r\n        if(!this.classList.contains('selected')) {\r\n            this.classList.add('selected');\r\n        }else {\r\n            this.classList.remove('selected');\r\n        }\r\n    })\r\n\r\n    const monthContainer = document.querySelector('.month-container');\r\n    monthContainer.addEventListener('click', function(e) {\r\n        e.preventDefault();\r\n        const month = e.target.getAttribute('for');\r\n        updateMonth(month);\r\n        const inputRadio = document.querySelector(`#${month}`);\r\n        inputRadio.checked = true;\r\n        selectInput.classList.remove('selected'); \r\n    })\r\n}\r\n\r\nfunction updateMonth(month) {\r\n    const selectInput = document.querySelector('.select-input');\r\n    selectInput.textContent = month;\r\n}","function resetFileInput() {\r\n    const inputContainer = document.querySelector('.upload-input-container');\r\n\r\n    const inputSubmit = document.querySelector('input[type=submit]');\r\n\r\n    const fileInput = document.createElement('INPUT');\r\n    fileInput.type = \"file\";\r\n    fileInput.name = \"fileToUpload\";\r\n    fileInput.accept = \".pdf\";\r\n    fileInput.id = \"fileToUpload\";\r\n    fileInput.addEventListener('change', function() {\r\n        // this.form.submit();\r\n        if(this.files.length > 0) {\r\n            const {boolean, errorInfo} = validateFile(this.files);\r\n            if(boolean) {\r\n                inputSubmit.click();\r\n            } else {\r\n                // Alert the user the file is not in PDF format\r\n                showErrorAlert(errorInfo);\r\n            }\r\n        }\r\n    })\r\n\r\n    inputContainer.appendChild(fileInput);\r\n}\r\n","function selectAnimation() {\r\n    const selectContainer = document.querySelector('.select-container');\r\n    selectContainer.addEventListener('click', function(e) {\r\n        e.preventDefault();\r\n        if(e.target !== this) {\r\n            const inputId = `#${e.target.getAttribute('for')}`;\r\n            const input = document.querySelector(inputId);\r\n            input.checked = true;\r\n        }\r\n        if(this.classList.contains('selected')) this.classList.remove('selected');\r\n        else this.classList.add('selected');\r\n    })\r\n}"]}