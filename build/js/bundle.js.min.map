{"version":3,"sources":["alert.js","app.js","dragNdrop.js","loadingAnimation.js","monthInput.js","resetFileInput.js","selectAnimation.js"],"names":["showErrorAlert","alertContainer","document","createElement","classList","add","alert","x","alertTitle","textContent","alertInfo","button","addEventListener","remove","setTimeout","body","appendChild","e","target","this","startApp","resetFileInput","dragNdrop","dropArea","querySelector","isOver","preventDefault","highlight","unhighlight","handleDrop","files","dataTransfer","validateFile","click","file","type","async","loadingAnimation","createLoading","retrieveDataTable","deleteLoading","loadingContainer","loading","animation","i","div","form","FormData","url","result","fetch","method","data","json","rfc","console","log","monthInput","selectInput","contains","month","getAttribute","updateMonth","checked","inputContainer","inputSubmit","fileInput","name","accept","id","selectAnimation","inputId"],"mappings":"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","file":"bundle.js","sourcesContent":["function showErrorAlert() {\r\n    const alertContainer = document.createElement('DIV');\r\n    alertContainer.classList.add('alert-container', 'in');\r\n\r\n    const alert = document.createElement('DIV');\r\n    alert.classList.add('alert', 'in');\r\n\r\n    const x = document.createElement('SPAN');\r\n    // x.textContent = 'X';\r\n\r\n    const alertTitle = document.createElement('P');\r\n    alertTitle.classList.add('alert-title');\r\n    alertTitle.textContent = 'El archivo no se puede subir';\r\n\r\n    const alertInfo = document.createElement('P');\r\n    alertInfo.classList.add('alert-info');\r\n    alertInfo.textContent = 'El formato debe ser PDF';\r\n\r\n    const button = document.createElement('BUTTON');\r\n    button.classList.add('button');\r\n    button.textContent = 'Ok';\r\n    button.addEventListener('click', () => {\r\n        alert.classList.remove('in');\r\n        alert.classList.add('out');\r\n\r\n        alertContainer.classList.remove('in');\r\n        alertContainer.classList.add('out');\r\n\r\n        setTimeout(() => {\r\n            alertContainer.remove();\r\n            document.body.classList.remove('alert');\r\n        }, 950);\r\n    })\r\n\r\n    alert.appendChild(x);\r\n    alert.appendChild(alertTitle);\r\n    alert.appendChild(alertInfo);\r\n    alert.appendChild(button);\r\n\r\n    alertContainer.appendChild(alert);\r\n    alertContainer.addEventListener('click', function(e) {\r\n        if(e.target === this) {\r\n\r\n            alert.classList.remove('in');\r\n            alert.classList.add('out');\r\n    \r\n            this.classList.remove('in');\r\n            this.classList.add('out');\r\n    \r\n            setTimeout(() => {\r\n                this.remove();\r\n                document.body.classList.remove('alert');\r\n            }, 950);\r\n        }\r\n    })\r\n\r\n    document.body.classList.add('alert');\r\n    document.body.appendChild(alertContainer);\r\n}","document.addEventListener('DOMContentLoaded', () => {\r\n    startApp();\r\n})\r\n\r\nfunction startApp() {\r\n    // selectAnimation();\r\n    resetFileInput();\r\n    dragNdrop();\r\n    // monthInput();\r\n}","function dragNdrop() {\r\n    const dropArea = document.querySelector('.upload-section');\r\n    let isOver = false;\r\n    \r\n    dropArea.addEventListener('dragover', function(e) {\r\n        // Stopping default prevents opening a new browser tab for showing the file that has been dropped\r\n        e.preventDefault();\r\n        isOver = true;\r\n        highlight(this);\r\n    });\r\n\r\n    dropArea.addEventListener('dragleave', function(e) {\r\n        isOver = false;\r\n        /* Waits 10ms for checking whether the mouse is over the dropArea or not\r\n        Because if you move into a child of the 'upload-container' DIV it will\r\n        count as if you have left the dropArea and eventually it will \r\n        produce a 'dragleave' event even though you are still moving inside the\r\n        dropArea. So that's why it waits 10ms because if the mouse is still moving\r\n        inside the dropArea, it will create a 'dragover' 7ms or less after the dragleave\r\n        event was fired. And that's how we know whether the mouse has left the dropArea \r\n        or not */\r\n        setTimeout(() => {\r\n            if(!isOver) {\r\n                unhighlight(this);\r\n            }\r\n        }, 10);\r\n    });\r\n\r\n    dropArea.addEventListener('drop', function(e) {\r\n        /* Stopping default prevents opening a new browser tab for showing the file that has been dropped\r\n        Both are necessary, for 'drop' and 'dragover' events */\r\n        e.preventDefault();\r\n        unhighlight(this);\r\n        handleDrop(e);\r\n    });\r\n\r\n    document.body.addEventListener('dragover', function(e) {\r\n        e.preventDefault();\r\n    })\r\n\r\n    document.body.addEventListener('drop', function(e) {\r\n        e.preventDefault();\r\n    })\r\n}\r\n\r\nfunction handleDrop(e) {\r\n    // Takes the file that has been dropped\r\n    const dt = e.dataTransfer;\r\n    const files = dt.files;\r\n\r\n    if(validateFile(files[0])) {\r\n        // Decode the QR code and retrieve the Date from the PDF Tax Receipt\r\n        const inputFile = document.querySelector('input[type=file]');\r\n        inputFile.files = files;\r\n    \r\n        const inputSubmit = document.querySelector('input[type=submit]');\r\n        inputSubmit.click();\r\n    }else {\r\n        // Alert the user the file is not in PDF format\r\n        showErrorAlert();\r\n    }\r\n}\r\n\r\nfunction highlight(dropArea) {\r\n    dropArea.classList.add('highlight');\r\n}\r\n\r\nfunction unhighlight(dropArea) {\r\n    dropArea.classList.remove('highlight');\r\n}\r\n\r\nfunction validateFile(file) {\r\n    if(file.type === 'application/pdf')  {\r\n        return true;       \r\n    } else {\r\n        return false;\r\n    }\r\n}","async function loadingAnimation(file) {\r\n    createLoading();\r\n    await retrieveDataTable(file);\r\n    deleteLoading();\r\n}\r\n\r\nfunction deleteLoading() {\r\n    const loadingContainer = document.querySelector('.loading-container');\r\n    loadingContainer.remove();\r\n}\r\n\r\nfunction createLoading() {\r\n    const loadingContainer = document.createElement('DIV');\r\n    loadingContainer.classList.add('loading-container');\r\n\r\n    const loading = document.createElement('DIV');\r\n    loading.classList.add('loading');\r\n\r\n    const animation = document.createElement('DIV');\r\n    animation.classList.add('lds-ring');\r\n\r\n    for(let i = 0; i < 4; i++) {\r\n        const div = document.createElement('DIV');\r\n        animation.appendChild(div);\r\n    }\r\n\r\n    loading.appendChild(animation);\r\n    loadingContainer.appendChild(loading);\r\n\r\n    document.body.appendChild(loadingContainer);\r\n}\r\n\r\nasync function retrieveDataTable(file) {\r\n    const form = new FormData(document.querySelector(\".form\"));\r\n    try {\r\n        const url = 'http://localhost/SocialService/QR-project/includes/monthsPerson.php';\r\n        const result = await fetch(url, {\r\n            method: \"post\",\r\n            body: form\r\n        });\r\n\r\n        const data = await result.json();\r\n        const {rfc} = data;\r\n        // console.log(rfc);\r\n        console.log(data);\r\n        // return rfc;\r\n    }catch(e) {\r\n        console.log(e);\r\n    }\r\n}","function monthInput() {\r\n    const selectInput = document.querySelector('.select-input');\r\n    selectInput.addEventListener('click', function(e) {\r\n        if(!this.classList.contains('selected')) {\r\n            this.classList.add('selected');\r\n        }else {\r\n            this.classList.remove('selected');\r\n        }\r\n    })\r\n\r\n    const monthContainer = document.querySelector('.month-container');\r\n    monthContainer.addEventListener('click', function(e) {\r\n        e.preventDefault();\r\n        const month = e.target.getAttribute('for');\r\n        updateMonth(month);\r\n        const inputRadio = document.querySelector(`#${month}`);\r\n        inputRadio.checked = true;\r\n        selectInput.classList.remove('selected'); \r\n    })\r\n}\r\n\r\nfunction updateMonth(month) {\r\n    const selectInput = document.querySelector('.select-input');\r\n    selectInput.textContent = month;\r\n}","function resetFileInput() {\r\n    const inputContainer = document.querySelector('.upload-input-container');\r\n\r\n    const inputSubmit = document.querySelector('input[type=submit]');\r\n\r\n    const fileInput = document.createElement('INPUT');\r\n    fileInput.type = \"file\";\r\n    fileInput.name = \"fileToUpload\";\r\n    fileInput.accept = \".pdf\";\r\n    fileInput.id = \"fileToUpload\";\r\n    fileInput.addEventListener('change', function() {\r\n        // this.form.submit();\r\n        if(validateFile(this.files[0])) {\r\n            inputSubmit.click();\r\n        } else {\r\n            // Alert the user the file is not in PDF format\r\n            showErrorAlert();\r\n        }\r\n    })\r\n\r\n    inputContainer.appendChild(fileInput);\r\n}\r\n","function selectAnimation() {\r\n    const selectContainer = document.querySelector('.select-container');\r\n    selectContainer.addEventListener('click', function(e) {\r\n        e.preventDefault();\r\n        if(e.target !== this) {\r\n            const inputId = `#${e.target.getAttribute('for')}`;\r\n            const input = document.querySelector(inputId);\r\n            input.checked = true;\r\n        }\r\n        if(this.classList.contains('selected')) this.classList.remove('selected');\r\n        else this.classList.add('selected');\r\n    })\r\n}"]}